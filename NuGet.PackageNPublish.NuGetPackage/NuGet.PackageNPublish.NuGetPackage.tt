<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".nuspec" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#
 var sourcePath = System.IO.Path.GetDirectoryName(Host.TemplateFile);
 var packagesDoc = System.Xml.Linq.XDocument.Load(sourcePath + "\\packages.config");
 var packages = from p in packagesDoc.Descendants("package") select p;
 
 var assemblyInfo = System.IO.File.ReadAllText(sourcePath + "\\Properties\\AssemblyInfo.cs");
 
 Func<string, string> extract = (string tag) => {
	var matcher = new System.Text.RegularExpressions.Regex("(" + tag + "\\(\")(.*)(\"\\))");
	var value = matcher.Match(assemblyInfo).Groups[2]; 
	return value.ToString();
	};
	
var fileVer = extract("AssemblyFileVersion");
var packageId = extract("AssemblyTitle").Replace(".NuGetPackage", string.Empty);
var description = extract("AssemblyDescription");
#>
<?xml version="1.0" encoding="utf-8" ?>
<package xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <metadata xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
    <id><#= packageId #></id>
    <version><#= fileVer #></version>
    <title><#= packageId #></title>
    <authors>Joel Hammond-Turner, Steve Grattan</authors>
    <summary>NuGet.PackageNPublish MSBuild targets file packaged as a NuGet package!</summary>
    <description>Templated NuSpec and packaging targets file to allow easier Package'n'Publish integration with TFS (or other CI) builds</description>
    <language>en-us</language>
	<developmentDependency>true</developmentDependency>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
	<projectUrl>https://github.com/JoelHT-Landmark/NuGet-PackageNPublish</projectUrl>
	<licenseUrl>https://github.com/JoelHT-Landmark/NuGet-PackageNPublish/blob/master/License.md</licenseUrl>
    <dependencies>
    <# foreach (var package in packages) { #>
    <dependency <#= package.Attribute("id") #> <#= package.Attribute("version") #> />
    <# } #>
    </dependencies>
  </metadata>
  <files>
	  <file src="content\**" target="content" exclude="Content.Readme.txt" />
	  <file src="build\**" target="build" />
	  <file src="tools\**" target="tools" />
  </files>
</package>
